#!/usr/bin/python
# takes: genop.tab from erlang/otp
# produces: genop.erl module which maps erlang asm opcodes to numbers
import libgenop

libgenop.load()

print("%%% Generated by codegen/genop.py")
print("-module(asm_genop).")
print("-export([arity/1, name/1, opcode/1]).")
print

for op in libgenop.ops:
    print "arity('%s') -> %d;" % (op['name'], op['arity'])
print("arity(X) -> erlang:error({bad_arity, X}).")
print

for op in libgenop.ops:
    print "name(%d) -> '%s';" % (op['opcode'], op['name'])
print("name(X) -> erlang:error({bad_name, X}).")
print

for op in libgenop.ops:
    print "opcode('%s') -> %d;" % (op['name'], op['opcode'])
print("opcode(X) -> erlang:error({bad_opcode, X}).")
print
