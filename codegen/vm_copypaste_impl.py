#!/usr/bin/python
# takes: genop.tab from erlang/otp
# produces: source of copypaste with all opcode implementations empty (copy manually)
import libgenop

libgenop.load()

print("""#pragma once
// Generated by codegen/vm_copypaste_impl.py

namespace impl {""")

# print headers
#for opcode in range(libgenop.MIN_OPCODE, libgenop.MAX_OPCODE+1):
#    op = libgenop.ops_by_code[opcode]
#    print("""  inline void opcode_%s(Process *proc); // opcode: %d""" % (op['name'], opcode))

# print implementations
for opcode in range(libgenop.MIN_OPCODE, libgenop.MAX_OPCODE+1):
    op = libgenop.ops_by_code[opcode]
    print("""  inline void opcode_%s(Process *proc) { // opcode: %d
  }""" % (op['name'], opcode))

print
print("} // ns impl")
print
